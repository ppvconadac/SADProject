<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4QsKDQw58snnpQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAcpSURBVHhe
        7Z1NqFVVGIY1y0gtDdKM1KBSIxItiEyhgZgNCtKcFImYDiLMHAWJSaNCqUZBUtGkJKpJFFEQhdQgiP4g
        qkGUCP0RJfRDSj/3nt739kq75bp3rbX3Ofees8/7wAOHfdb61vq+7+a95+yfphljjDHGGGOMMcYYY4wx
        xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcb0K6Ojnelwv5yuw2YYQMNnwkOwI/l6pt42bQaNngvfUuOr
        8thcDTNtBA1eBD9Rw2PyvUUabtoEGrsCfqNGTyTHrNA0U8LISGd/EzudzlUK1VXQ0HXwFzU4R45dp+km
        l6CIxYLbFKprIO4W+Gd1nUw5Z4vCmByCAhYLblGoroCYe+BodY1COXePwpkUQfGKBTcqVCMQawY8WI3d
        UMaaofBmPIKiFQuuV6jaIM4s+Eo1bpdkzFlaxsQIClYsuE6haoEY8+F71ZhdlrHnazkTEhSrWHCNQhWD
        +Uvhl9V4PZJrLNWypkpQqGLBlQpVBOauhj9WY/VYrrVay5uTBEUqFlyuUNlg3kZ4vBqnwKMy9l5KrrlR
        2zAkKFCx4BKFygJzdsKRaowCP4QLJV/HxqTk2ju1HRMUp8iRkc4h/ACcrlATgvE8lXugOr/Q1+EchWO8
        OToWG5sj9+JTykFRskXzD6D5WQXEeJ7Kfa46v9Cn4Sk/aDym92JzcuSehvuUclCQHEfQ+Ls1PQnGz4OH
        K/NLfUChxoVjgjklcm/zFGr4CIqR8gSan/3VL8Yvhp9W5pf4F7xDoZJwrObEYqXkHhcr1HARFGIij6H5
        azUtCcavhN9W5pf4G7xBobLhHM2NxUzJva5UqOEhKMJ4HkXzL9OUJBi/Hpacyq36Haz13QLhXMWIxU7J
        Pa9XqOEgKEDMj9H8CzQ8CcZvhXVO5dLP4UUKVRvGUKzYGim5960K1X6C5EPfQPPP1tAkGL83mF/iO/Bc
        hWoMYylmbK0c9ypUu4kkPiY+5j2D5p+hYROC8TyV+0R1fqEvwDMVrmswpmLH1syRObX7lHKQ8Jho/kN6
        OwnGz4avVucX+gjs2RcyjK01YmvnyNxmK1z7CJLlZ/y79FYSjF8A36/ML5Ffyd6jUD2Ha2nN2F5SMscF
        CtUuKkkeR/Nv1uEkGL8MflWZX+IJ2NVLyXLgmlo7tqeUzHWZQrUHJfcTmn+tDiXB+DWco7mlct4ahZp0
        uLb2ENtbyinde09AQkfQ/OyfbIzfBOueyj0Cp/y/Iu5Be4ntMSVz36RQgw+af75eJkHiu2CT36PZa/Ua
        7kV7iu01JWuwS6HaD5LlX9IPK/k69uVf0tyT9hbbc46sSbtPKSNBfpZ+XgnX8UnYt5+luTftMbb3HFmb
        rn+H0RcgMZ7KfVuJ1vF+hep7uNdg7yWyRu06pYyElsDPlGCpA/l9OvesvcdySslaLVGowQaJrIJDeUaN
        e1cOsdxSsmarFGowQQIb4K9KqNRWnFNnDsollmNK1m6DQg0W2Pg2WPefwFZdVcNclFMs15Ss4TaFGgyw
        4X2VBEpt5XV1zEm5xXLOcZ9C9S/YJK+sfaqy6VJbfWUtc1OOsdxzZG2zLp2fdLAxfhHymjZax6G4tp45
        KtdYDXJkjfvrizBsiF+FfqANljqUd9cwZ+Ueq0lK1ro/vgrHRpbDJidDsk8btw3mrhrEapOSNV+uUFMD
        NrAWHtOGSvUdtoA1UC1iNUrJ2mdfXt9VsPBmWPeCCN5jf6lCDT2shWoSq1VK9mCzQk0OWHA3rPv7y0/Z
        iMCaqDaxmqVkL3YrVO/AIvwL9lEtWseXoZ+zMw6sjWoUq12O7E1vPkkhME/lvqiF6vg49JO2ErBGqlWs
        hjmyR909pYyATW6M4LP27lMokwlrptpVa5lr926MQaAmt0b9AW9XKFMIa6caxmqbsvmtcQjAmyO/V8BS
        f4Z+3m5DWEPVMlbjlOxdvZtjMbHJ7dFfwysUyjSEtVRNY7VOWX57PCZsh3UfkMBn7l+oUKZLsKaqbazm
        KdnL7Qo1MRjY5BEpb8JzFMp0GdZWNY7VPsfxH5GDN5s+JOlZmHUHsKkPa6xax3qQ46kPycKBObDJY9Ie
        VCgzSbDmQQ9K/O8xeXjBByV+pDdK/RveORbITDqsvXoQ601K9nwhg9S9TOl3eJP2YqYI9kC9iPUo5WEG
        4Pn80jtcf4BXaw9mimEv1JNYr8aTPf/3egK84Dnp3J+iL+DFYxNN38CeqDexnoWy1/+/FgMH+E9J6vfJ
        u/A8TTF9BnujHsV6d1L2OP6rG2/sqAwMfQmepaGmT2GP1KtYD+kODY2DAbFr+h+Dp2mI6XPYK/Us7GPe
        vQUYePL/uMXTkffqsBkw2Dv1kL08qMNpMJgXJfBe9Vt1yAwo7KF66YtxjDHGGGOMMcYYY4wxxhhjjDHG
        GGOMMcYYY4wxxhhjjDHGGGOMMcaYgWTatH8ACNiLEFV42ZYAAAAASUVORK5CYII=
</value>
  </data>
</root>